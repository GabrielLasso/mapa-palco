{"version":3,"sources":["src/selection.ts","src/draggable.ts","src/constants.ts","src/instruments.ts","src/map.ts","src/storage.ts","src/sidemenu.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.bc058d07.js","sourceRoot":"..","sourcesContent":["import '../style/selection.less'\n\nlet startingX: number\nlet startingY: number\n\nfunction interscts(r1: ClientRect, r2: ClientRect): boolean {\n    if (r1.left + r1.width >= r2.left &&\n        r1.left <= r2.left + r2.width &&\n        r1.top + r1.height >= r2.top &&\n        r1.top <= r2.top + r2.height) {\n        return true;\n    }\n    return false;\n}\n\nfunction querySelectorRect(query: string, r: ClientRect): NodeListOf<HTMLElement> {\n    let elements = document.querySelectorAll(query)\n\n    let filteredList = []\n    elements.forEach((element) => {\n        if (interscts(element.getBoundingClientRect(), r)) {\n            filteredList.push(element)\n        }\n    })\n\n    return filteredList as unknown as NodeListOf<HTMLElement>\n}\n\nexport function selectedElements(parent : HTMLElement) : NodeListOf<HTMLElement> {\n    return parent.querySelectorAll('.selected')\n}\n\nexport function selectElement(element: HTMLElement) {\n    element.classList.add('selected')\n}\n\nexport function clearSelection(parent : HTMLElement) {\n    for (let index = 0; index < parent.children.length; index++) {\n        parent.children.item(index).classList.remove('selected')\n    }\n}\n\nexport function initSelection(parent : HTMLElement) {\n    let selection = document.createElement(\"selection-area\")\n    parent.append(selection)\n    parent.onmousedown = (mouseDown) => {\n        if (mouseDown.target != parent) {\n            return\n        }\n        clearSelection(parent)\n        startingX = mouseDown.clientX - parent.offsetLeft + window.pageXOffset\n        startingY = mouseDown.clientY - parent.offsetTop + window.pageYOffset\n        selection.style.display = 'block'\n        selection.style.left = startingX + 'px'\n        selection.style.top = startingY + 'px'\n        selection.style.height = '0px'\n        selection.style.width = '0px'\n\n        function onMouseMove(mouseMove: MouseEvent) {\n            let x = mouseMove.clientX - parent.offsetLeft + window.pageXOffset\n            let y = mouseMove.clientY - parent.offsetTop + window.pageYOffset\n            if (x < 0) {\n                x = 0\n            }\n            if (y < 0) {\n                y = 0\n            }\n            if (x > parent.offsetWidth) {\n                x = parent.offsetWidth\n            }\n            if (y > parent.offsetHeight) {\n                y = parent.offsetHeight\n            }\n            let width = Math.abs(startingX - x)\n            let height = Math.abs(startingY - y)\n            selection.style.left = Math.min(startingX, x) + 'px'\n            selection.style.top = Math.min(startingY, y) + 'px'\n            selection.style.height = height + 'px'\n            selection.style.width = width + 'px'\n            clearSelection(parent)\n            querySelectorRect('.selectable', selection.getBoundingClientRect()).forEach(selectElement)\n        }\n\n        function onMouseUp(mouseUp: MouseEvent) {\n            selection.style.display = 'none'\n            document.removeEventListener('mouseup', onMouseUp)\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n\n        document.addEventListener('mousemove', onMouseMove)\n        document.addEventListener('mouseup', onMouseUp)\n    }\n}\n","export function makeDraggable(element: HTMLElement, limit: HTMLElement) {\n    element.onmousedown = (event) => {\n        event.preventDefault()\n\n        let shiftX = event.clientX - element.offsetLeft\n        let shiftY = event.clientY - element.offsetTop\n\n        function onMouseMove(event: MouseEvent) {\n            let newLeft = event.clientX - shiftX\n            let newTop = event.clientY - shiftY\n\n            if (newLeft < 0) {\n                newLeft = 0\n            }\n            if (newTop < 0) {\n                newTop = 0\n            }\n            let rightEdge = limit.clientWidth - element.clientWidth\n            if (newLeft > rightEdge) {\n                newLeft = rightEdge\n            }\n            let bottomEdge = limit.clientHeight - element.clientHeight\n            if (newTop > bottomEdge) {\n                newTop = bottomEdge\n            }\n\n            element.style.left = newLeft + 'px'\n            element.style.top = newTop + 'px'\n        }\n\n        function onMouseUp() {\n            document.removeEventListener('mouseup', onMouseUp)\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n\n    }\n\n    element.ondragstart = () => false\n}","export const shaku = 20 // px\nexport const meter = 3.3 * shaku // px\n","import { makeDraggable } from './draggable'\nimport { shaku } from './constants'\nimport { clearSelection, selectElement, selectedElements } from './selection'\nimport '../style/instruments.less'\n\nexport enum InstrumentType {\n    Okedo = 'okedo',\n    Shime = 'shime',\n    Nagado = 'nagado',\n    Oodaiko = 'oodaiko'\n}\n\nexport interface InstrumentData {\n    type : InstrumentType,\n    x : number,\n    y : number,\n    alpha : number,\n    diameter : number\n}\n\nexport function createInstrument(instrument : InstrumentData, map : HTMLElement) {\n    let newInstrument = document.createElement(\"e-taiko\")\n    newInstrument.classList.add(instrument.type)\n    newInstrument.classList.add('selectable')\n    newInstrument.setAttribute('data-type', instrument.type)\n    newInstrument.style.height = instrument.diameter * shaku + 'px'\n    newInstrument.style.width = instrument.diameter * shaku + 'px'\n    newInstrument.style.left = map.clientWidth / 2 - instrument.diameter * shaku / 2 + instrument.x + 'px'\n    newInstrument.style.top = map.clientHeight / 2 - instrument.diameter * shaku / 2 + instrument.y + 'px'\n    newInstrument.onclick = (event) => {\n        clearSelection(map)\n        selectElement(newInstrument)\n    }\n    makeDraggable(newInstrument, map)\n    map.append(newInstrument)\n}\n\nexport function clearInstruments(map : HTMLElement) {\n    map.querySelectorAll('e-taiko').forEach((element : HTMLElement) => {\n        element.remove()\n    })\n}\n\nexport function deleteSelectedInstruments(map : HTMLElement) {\n    selectedElements(map).forEach((element : HTMLElement) => {\n        element.remove()\n    })\n}","import { meter } from './constants'\nimport '../style/map.less'\nimport { clearInstruments } from './instruments'\n\nexport interface MapData {\n    height : number,\n    width : number\n}\n\nexport function initMap(height : number, width : number, map : HTMLElement)  {\n    clearInstruments(map)\n    map.style.display = 'block'\n    map.style.height = height * meter + 'px'\n    map.style.width = width * meter + 'px'\n    map.style.backgroundPositionX = Math.round(width * meter / 2) + 'px'\n    map.style.backgroundPositionY = Math.round(height * meter / 2) + 'px'\n    map.setAttribute('data-height', height.toString())\n    map.setAttribute('data-width', width.toString())\n\n    let corner = document.getElementById('corner')\n    corner.style.top = height * meter - 1 + 'px'\n    corner.style.left = width * meter - 1 + 'px'\n}\n","import { shaku } from './constants'\nimport { MapData, initMap } from './map'\nimport { InstrumentData, InstrumentType, createInstrument } from './instruments'\n\nexport interface SaveData {\n    map : MapData,\n    instruments : Array<InstrumentData>\n}\n\nexport function mapToJson(map : HTMLElement) : string {\n    let height = parseInt(map.getAttribute('data-height'));\n    let width = parseInt(map.getAttribute('data-width'));\n    let data : SaveData = {\n        map : {\n            height : height,\n            width : width\n        },\n        instruments : Array<InstrumentData>()\n    };\n    map.querySelectorAll('e-taiko').forEach((element : HTMLElement) => {\n        data.instruments.push({\n            type : element.getAttribute('data-type') as InstrumentType,\n            x : element.offsetLeft + element.clientWidth / 2 - map.clientWidth / 2,\n            y : element.offsetTop + element.clientHeight / 2 - map.clientHeight / 2,\n            alpha : 0,\n            diameter : element.clientWidth / shaku\n        })\n    });\n    return JSON.stringify(data)\n}\n\nexport function load(map : HTMLElement, data: SaveData) {\n    initMap(data.map.height, data.map.width, map)\n    data.instruments.forEach((instrument) => {\n        createInstrument(instrument, map)\n    })\n}","import '../style/sidemenu.less'\n\nimport { createInstrument, InstrumentData, InstrumentType, deleteSelectedInstruments } from './instruments'\nimport { initMap } from './map'\nimport { mapToJson, load, SaveData } from './storage'\n\nexport function initSideMenuListeners(map : HTMLElement) {\n    let selectedInstrument : InstrumentData\n\n    document.getElementById('add').onclick = (event) => {\n        if (selectedInstrument != null) {\n            createInstrument(selectedInstrument, map)\n        }\n    }\n\n    document.getElementById('save').onclick = (event) => {\n        let anchor = document.getElementById(\"download\") as HTMLAnchorElement\n        anchor.download = \"mapa.taiko\"\n        anchor.href = \"data:text/json;charset=utf-8,\" + encodeURIComponent(mapToJson(map))\n        anchor.click()\n    }\n\n    document.getElementById('load').onchange = (event : InputEvent) => {\n        let file = (event.target as HTMLInputElement).files[0]\n        let reader = new FileReader()\n        reader.readAsText(file)\n        reader.onload = (loadEvent) => {\n            let data = JSON.parse(loadEvent.target.result.toString()) as SaveData\n            load(map, data)\n        }\n    }\n\n    document.getElementById('new').onclick = (event) => {\n        let height = parseInt((document.getElementById('height') as HTMLInputElement).value)\n        let width = parseInt((document.getElementById('width') as HTMLInputElement).value)\n        initMap(height, width, map)\n    }\n\n    document.querySelectorAll('list-item').forEach((item : HTMLElement) => {\n        item.onclick = (event) => {\n            document.querySelectorAll('list-item').forEach((item : HTMLElement) => {\n                item.classList.remove('selected-item')\n            })\n            item.classList.add('selected-item')\n\n            selectedInstrument = {\n                type : item.getAttribute('data-type') as InstrumentType,\n                x : 0,\n                y : 0,\n                alpha : 0,\n                diameter : parseFloat(item.getAttribute('data-diameter'))\n            }\n        }\n    })\n}","import '../style/ui-components.less'\n\nimport { initSelection, selectElement } from './selection'\nimport { deleteSelectedInstruments } from './instruments'\nimport { initSideMenuListeners } from './sidemenu'\n\nlet map = document.getElementById('map')\n\nwindow.onload = () => {\n    initSideMenuListeners(map)\n    initSelection(map)\n}\n\ndocument.onkeydown = (event : KeyboardEvent) => {\n    if (event.key == \"Delete\") {\n        deleteSelectedInstruments(map)\n    }\n}\n"]}