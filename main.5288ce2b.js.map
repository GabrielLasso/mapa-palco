{"version":3,"sources":["src/global.ts","src/selection.ts","src/draggable.ts","src/instruments.ts","src/map.ts","node_modules/jsonpack/main.js","node_modules/node-lzw/lib/lzw.js","node_modules/json-lzw/lib/json-lzw.js","src/storage.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.5288ce2b.js","sourceRoot":"..","sourcesContent":["export var map : HTMLElement\n\nexport function setMap(element : HTMLElement) {\n    map = element\n}\n\nexport const shaku = 20 // px\nexport const meter = 3.3 * shaku // px\n","import { map } from './global'\nimport '../style/selection.less'\n\nlet startingX: number\nlet startingY: number\nlet isSelecting: boolean = false\n\nfunction interscts(r1: ClientRect, r2: ClientRect): boolean {\n    if (r1.left + r1.width >= r2.left &&\n        r1.left <= r2.left + r2.width &&\n        r1.top + r1.height >= r2.top &&\n        r1.top <= r2.top + r2.height) {\n        return true;\n    }\n    return false;\n}\n\nfunction querySelectorRect(query: string, r: ClientRect): NodeListOf<HTMLElement> {\n    let elements = map.querySelectorAll(query)\n\n    let filteredList = []\n    elements.forEach((element) => {\n        if (interscts(element.getBoundingClientRect(), r)) {\n            filteredList.push(element)\n        }\n    })\n\n    return filteredList as unknown as NodeListOf<HTMLElement>\n}\n\nexport function selectElement(element: HTMLElement) {\n    element.classList.add('selected')\n}\n\nexport function clearSelection() {\n    for (let index = 0; index < map.children.length; index++) {\n        map.children.item(index).classList.remove('selected')\n    }\n}\n\nexport function initSelection() {\n    let selection = document.getElementById(\"selection\")\n    map.onmousedown = (mouseDown) => {\n        if ((mouseDown.target as HTMLElement).id != 'map') {\n            return\n        }\n        clearSelection()\n        isSelecting = true\n        startingX = mouseDown.clientX - map.offsetLeft + window.pageXOffset\n        startingY = mouseDown.clientY - map.offsetTop + window.pageYOffset\n        selection.style.display = 'block'\n        selection.style.left = startingX + 'px'\n        selection.style.top = startingY + 'px'\n        selection.style.height = '0px'\n        selection.style.width = '0px'\n\n        function onMouseMove(mouseMove: MouseEvent) {\n            let x = mouseMove.clientX - map.offsetLeft + window.pageXOffset\n            let y = mouseMove.clientY - map.offsetTop + window.pageYOffset\n            if (x < 0) {\n                x = 0\n            }\n            if (y < 0) {\n                y = 0\n            }\n            if (x > map.offsetWidth) {\n                x = map.offsetWidth\n            }\n            if (y > map.offsetHeight) {\n                y = map.offsetHeight\n            }\n            let width = Math.abs(startingX - x)\n            let height = Math.abs(startingY - y)\n            selection.style.left = Math.min(startingX, x) + 'px'\n            selection.style.top = Math.min(startingY, y) + 'px'\n            selection.style.height = height + 'px'\n            selection.style.width = width + 'px'\n            clearSelection()\n            querySelectorRect('.taiko', selection.getBoundingClientRect()).forEach(selectElement)\n        }\n\n        function onMouseUp(mouseUp: MouseEvent) {\n            isSelecting = false\n            selection.style.display = 'none'\n            document.removeEventListener('mouseup', onMouseUp)\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n\n        document.addEventListener('mousemove', onMouseMove)\n        document.addEventListener('mouseup', onMouseUp)\n    }\n}\n","import { clearSelection, selectElement } from './selection'\nimport { map } from './global'\n\nexport function makeDraggable(element: HTMLElement) {\n    element.onmousedown = (event) => {\n        event.preventDefault()\n\n        let shiftX = event.clientX - element.offsetLeft\n        let shiftY = event.clientY - element.offsetTop\n\n        clearSelection()\n        selectElement(element)\n\n        function onMouseMove(event: MouseEvent) {\n            let newLeft = event.clientX - shiftX\n            let newTop = event.clientY - shiftY\n\n            if (newLeft < 0) {\n                newLeft = 0\n            }\n            if (newTop < 0) {\n                newTop = 0\n            }\n            let rightEdge = map.clientWidth - element.clientWidth\n            if (newLeft > rightEdge) {\n                newLeft = rightEdge\n            }\n            let bottomEdge = map.clientHeight - element.clientHeight\n            if (newTop > bottomEdge) {\n                newTop = bottomEdge\n            }\n\n            element.style.left = newLeft + 'px'\n            element.style.top = newTop + 'px'\n        }\n\n        function onMouseUp() {\n            document.removeEventListener('mouseup', onMouseUp)\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n\n    }\n\n    element.ondragstart = () => false\n}","import { makeDraggable } from './draggable'\nimport '../style/instruments.less'\nimport { shaku } from './global'\n\nexport enum InstrumentType {\n    Okedo = 'okedo'\n}\n\nexport interface InstrumentData {\n    type : InstrumentType,\n    x : number,\n    y : number,\n    alpha : number,\n    diameter : number\n}\n\nexport function createInstrument(instrument : InstrumentType, map : HTMLElement, x : number, y : number, alpha : number, diameter : number) {\n    let newInstrument = document.createElement(\"div\")\n    newInstrument.classList.add(instrument)\n    newInstrument.classList.add('taiko')\n    newInstrument.setAttribute('data-type', instrument)\n    newInstrument.style.height = diameter * shaku + 'px'\n    newInstrument.style.width = diameter * shaku + 'px'\n    newInstrument.style.left = map.clientWidth / 2 - diameter * shaku / 2 + x + 'px'\n    newInstrument.style.top = map.clientHeight / 2 - diameter * shaku / 2 + y + 'px'\n    makeDraggable(newInstrument)\n    map.append(newInstrument)\n}\n\nexport function clearInstruments(map : HTMLElement) {\n    map.querySelectorAll('.taiko').forEach((element : HTMLElement) => {\n        element.remove()\n    })\n}\n","import { setMap, map, meter } from './global'\nimport '../style/map.less'\nimport { clearInstruments } from './instruments'\n\nexport interface MapData {\n    height : number,\n    width : number\n}\n\nexport function initMap(height : number, width : number) {\n    setMap(document.getElementById(\"map\"))\n    clearInstruments(map)\n    map.style.height = height * meter + 'px'\n    map.style.width = width * meter + 'px'\n    map.style.backgroundPositionX = Math.round(width * meter / 2) + 'px'\n    map.style.backgroundPositionY = Math.round(height * meter / 2) + 'px'\n    map.setAttribute('data-height', height.toString())\n    map.setAttribute('data-width', width.toString())\n}\n","/*\n Copyright (c) 2013, Rodrigo González, Sapienlab All Rights Reserved.\n Available via MIT LICENSE. See https://github.com/roro89/jsonpack/blob/master/LICENSE.md for details.\n */\n(function(define) {\n\n\tdefine([], function() {\n\n\t\tvar TOKEN_TRUE = -1;\n\t\tvar TOKEN_FALSE = -2;\n\t\tvar TOKEN_NULL = -3;\n\t\tvar TOKEN_EMPTY_STRING = -4;\n\t\tvar TOKEN_UNDEFINED = -5;\n\n\t\tvar pack = function(json, options) {\n\n\t\t\t// Canonizes the options\n\t\t\toptions = options || {};\n\n\t\t\t// A shorthand for debugging\n\t\t\tvar verbose = options.verbose || false;\n\n\t\t\tverbose && console.log('Normalize the JSON Object');\n\n\t\t\t// JSON as Javascript Object (Not string representation)\n\t\t\tjson = typeof json === 'string' ? this.JSON.parse(json) : json;\n\n\t\t\tverbose && console.log('Creating a empty dictionary');\n\n\t\t\t// The dictionary\n\t\t\tvar dictionary = {\n\t\t\t\tstrings : [],\n\t\t\t\tintegers : [],\n\t\t\t\tfloats : []\n\t\t\t};\n\n\t\t\tverbose && console.log('Creating the AST');\n\n\t\t\t// The AST\n\t\t\tvar ast = (function recursiveAstBuilder(item) {\n\n\t\t\t\tverbose && console.log('Calling recursiveAstBuilder with ' + this.JSON.stringify(item));\n\n\t\t\t\t// The type of the item\n\t\t\t\tvar type = typeof item;\n\n\t\t\t\t// Case 7: The item is null\n\t\t\t\tif (item === null) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'null',\n\t\t\t\t\t\tindex : TOKEN_NULL\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//add undefined \n\t\t\t\tif (typeof item === 'undefined') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'undefined',\n\t\t\t\t\t\tindex : TOKEN_UNDEFINED\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Case 1: The item is Array Object\n\t\t\t\tif ( item instanceof Array) {\n\n\t\t\t\t\t// Create a new sub-AST of type Array (@)\n\t\t\t\t\tvar ast = ['@'];\n\n\t\t\t\t\t// Add each items\n\t\t\t\t\tfor (var i in item) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!item.hasOwnProperty(i)) continue;\n\n\t\t\t\t\t\tast.push(recursiveAstBuilder(item[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\t// And return\n\t\t\t\t\treturn ast;\n\n\t\t\t\t}\n\n\t\t\t\t// Case 2: The item is Object\n\t\t\t\tif (type === 'object') {\n\n\t\t\t\t\t// Create a new sub-AST of type Object ($)\n\t\t\t\t\tvar ast = ['$'];\n\n\t\t\t\t\t// Add each items\n\t\t\t\t\tfor (var key in item) {\n\n\t\t\t\t\t\tif (!item.hasOwnProperty(key))\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tast.push(recursiveAstBuilder(key));\n\t\t\t\t\t\tast.push(recursiveAstBuilder(item[key]));\n\t\t\t\t\t}\n\n\t\t\t\t\t// And return\n\t\t\t\t\treturn ast;\n\n\t\t\t\t}\n\n\t\t\t\t// Case 3: The item empty string\n\t\t\t\tif (item === '') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'empty',\n\t\t\t\t\t\tindex : TOKEN_EMPTY_STRING\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Case 4: The item is String\n\t\t\t\tif (type === 'string') {\n\n\t\t\t\t\t// The index of that word in the dictionary\n\t\t\t\t\tvar index = _indexOf.call(dictionary.strings, item);\n\n\t\t\t\t\t// If not, add to the dictionary and actualize the index\n\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\tdictionary.strings.push(_encode(item));\n\t\t\t\t\t\tindex = dictionary.strings.length - 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the token\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'strings',\n\t\t\t\t\t\tindex : index\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Case 5: The item is integer\n\t\t\t\tif (type === 'number' && item % 1 === 0) {\n\n\t\t\t\t\t// The index of that number in the dictionary\n\t\t\t\t\tvar index = _indexOf.call(dictionary.integers, item);\n\n\t\t\t\t\t// If not, add to the dictionary and actualize the index\n\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\tdictionary.integers.push(_base10To36(item));\n\t\t\t\t\t\tindex = dictionary.integers.length - 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the token\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'integers',\n\t\t\t\t\t\tindex : index\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Case 6: The item is float\n\t\t\t\tif (type === 'number') {\n\t\t\t\t\t// The index of that number in the dictionary\n\t\t\t\t\tvar index = _indexOf.call(dictionary.floats, item);\n\n\t\t\t\t\t// If not, add to the dictionary and actualize the index\n\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\t// Float not use base 36\n\t\t\t\t\t\tdictionary.floats.push(item);\n\t\t\t\t\t\tindex = dictionary.floats.length - 1;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return the token\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'floats',\n\t\t\t\t\t\tindex : index\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Case 7: The item is boolean\n\t\t\t\tif (type === 'boolean') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype : 'boolean',\n\t\t\t\t\t\tindex : item ? TOKEN_TRUE : TOKEN_FALSE\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Default\n\t\t\t\tthrow new Error('Unexpected argument of type ' + typeof (item));\n\n\t\t\t})(json);\n\n\t\t\t// A set of shorthands proxies for the length of the dictionaries\n\t\t\tvar stringLength = dictionary.strings.length;\n\t\t\tvar integerLength = dictionary.integers.length;\n\t\t\tvar floatLength = dictionary.floats.length;\n\n\t\t\tverbose && console.log('Parsing the dictionary');\n\n\t\t\t// Create a raw dictionary\n\t\t\tvar packed = dictionary.strings.join('|');\n\t\t\tpacked += '^' + dictionary.integers.join('|');\n\t\t\tpacked += '^' + dictionary.floats.join('|');\n\n\t\t\tverbose && console.log('Parsing the structure');\n\n\t\t\t// And add the structure\n\t\t\tpacked += '^' + (function recursiveParser(item) {\n\n\t\t\t\tverbose && console.log('Calling a recursiveParser with ' + this.JSON.stringify(item));\n\n\t\t\t\t// If the item is Array, then is a object of\n\t\t\t\t// type [object Object] or [object Array]\n\t\t\t\tif ( item instanceof Array) {\n\n\t\t\t\t\t// The packed resulting\n\t\t\t\t\tvar packed = item.shift();\n\n\t\t\t\t\tfor (var i in item) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!item.hasOwnProperty(i)) \n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\n\t\t\t\t\t\tpacked += recursiveParser(item[i]) + '|';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (packed[packed.length - 1] === '|' ? packed.slice(0, -1) : packed) + ']';\n\n\t\t\t\t}\n\n\t\t\t\t// A shorthand proxies\n\t\t\t\tvar type = item.type, index = item.index;\n\n\t\t\t\tif (type === 'strings') {\n\t\t\t\t\t// Just return the base 36 of index\n\t\t\t\t\treturn _base10To36(index);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'integers') {\n\t\t\t\t\t// Return a base 36 of index plus stringLength offset\n\t\t\t\t\treturn _base10To36(stringLength + index);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'floats') {\n\t\t\t\t\t// Return a base 36 of index plus stringLength and integerLength offset\n\t\t\t\t\treturn _base10To36(stringLength + integerLength + index);\n\t\t\t\t}\n\n\t\t\t\tif (type === 'boolean') {\n\t\t\t\t\treturn item.index;\n\t\t\t\t}\n\n\t\t\t\tif (type === 'null') {\n\t\t\t\t\treturn TOKEN_NULL;\n\t\t\t\t}\n\n\t\t\t\tif (type === 'undefined') {\n\t\t\t\t\treturn TOKEN_UNDEFINED;\n\t\t\t\t}\n\n\t\t\t\tif (type === 'empty') {\n\t\t\t\t\treturn TOKEN_EMPTY_STRING;\n\t\t\t\t}\n\n\t\t\t\tthrow new TypeError('The item is alien!');\n\n\t\t\t})(ast);\n\n\t\t\tverbose && console.log('Ending parser');\n\n\t\t\t// If debug, return a internal representation of dictionary and stuff\n\t\t\tif (options.debug)\n\t\t\t\treturn {\n\t\t\t\t\tdictionary : dictionary,\n\t\t\t\t\tast : ast,\n\t\t\t\t\tpacked : packed\n\t\t\t\t};\n\n\t\t\treturn packed;\n\n\t\t};\n\n\t\tvar unpack = function(packed, options) {\n\n\t\t\t// Canonizes the options\n\t\t\toptions = options || {};\n\n\t\t\t// A raw buffer\n\t\t\tvar rawBuffers = packed.split('^');\n\n\t\t\t// Create a dictionary\n\t\t\toptions.verbose && console.log('Building dictionary');\n\t\t\tvar dictionary = [];\n\n\t\t\t// Add the strings values\n\t\t\tvar buffer = rawBuffers[0];\n\t\t\tif (buffer !== '') {\n\t\t\t\tbuffer = buffer.split('|');\n\t\t\t\toptions.verbose && console.log('Parse the strings dictionary');\n\t\t\t\tfor (var i=0, n=buffer.length; i<n; i++){\n\t\t\t\t\tdictionary.push(_decode(buffer[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the integers values\n\t\t\tbuffer = rawBuffers[1];\n\t\t\tif (buffer !== '') {\n\t\t\t\tbuffer = buffer.split('|');\n\t\t\t\toptions.verbose && console.log('Parse the integers dictionary');\n\t\t\t\tfor (var i=0, n=buffer.length; i<n; i++){\n\t\t\t\t\tdictionary.push(_base36To10(buffer[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the floats values\n\t\t\tbuffer = rawBuffers[2];\n\t\t\tif (buffer !== '') {\n\t\t\t\tbuffer = buffer.split('|')\n\t\t\t\toptions.verbose && console.log('Parse the floats dictionary');\n\t\t\t\tfor (var i=0, n=buffer.length; i<n; i++){\n\t\t\t\t\tdictionary.push(parseFloat(buffer[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Free memory\n\t\t\tbuffer = null;\n\n\t\t\toptions.verbose && console.log('Tokenizing the structure');\n\n\t\t\t// Tokenizer the structure\n\t\t\tvar number36 = '';\n\t\t\tvar tokens = [];\n\t\t\tvar len=rawBuffers[3].length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar symbol = rawBuffers[3].charAt(i);\n\t\t\t\tif (symbol === '|' || symbol === '$' || symbol === '@' || symbol === ']') {\n\t\t\t\t\tif (number36) {\n\t\t\t\t\t\ttokens.push(_base36To10(number36));\n\t\t\t\t\t\tnumber36 = '';\n\t\t\t\t\t}\n\t\t\t\t\tsymbol !== '|' && tokens.push(symbol);\n\t\t\t\t} else {\n\t\t\t\t\tnumber36 += symbol;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// A shorthand proxy for tokens.length\n\t\t\tvar tokensLength = tokens.length;\n\n\t\t\t// The index of the next token to read\n\t\t\tvar tokensIndex = 0;\n\n\t\t\toptions.verbose && console.log('Starting recursive parser');\n\n\t\t\treturn (function recursiveUnpackerParser() {\n\n\t\t\t\t// Maybe '$' (object) or '@' (array)\n\t\t\t\tvar type = tokens[tokensIndex++];\n\n\t\t\t\toptions.verbose && console.log('Reading collection type ' + (type === '$' ? 'object' : 'Array'));\n\n\t\t\t\t// Parse an array\n\t\t\t\tif (type === '@') {\n\n\t\t\t\t\tvar node = [];\n\n\t\t\t\t\tfor (; tokensIndex < tokensLength; tokensIndex++) {\n\t\t\t\t\t\tvar value = tokens[tokensIndex];\n\t\t\t\t\t\toptions.verbose && console.log('Read ' + value + ' symbol');\n\t\t\t\t\t\tif (value === ']')\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\tif (value === '@' || value === '$') {\n\t\t\t\t\t\t\tnode.push(recursiveUnpackerParser());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch(value) {\n\t\t\t\t\t\t\t\tcase TOKEN_TRUE:\n\t\t\t\t\t\t\t\t\tnode.push(true);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_FALSE:\n\t\t\t\t\t\t\t\t\tnode.push(false);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_NULL:\n\t\t\t\t\t\t\t\t\tnode.push(null);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_UNDEFINED:\n\t\t\t\t\t\t\t\t\tnode.push(undefined);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_EMPTY_STRING:\n\t\t\t\t\t\t\t\t\tnode.push('');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tnode.push(dictionary[value]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.verbose && console.log('Parsed ' + this.JSON.stringify(node));\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t}\n\n\t\t\t\t// Parse a object\n\t\t\t\tif (type === '$') {\n\t\t\t\t\tvar node = {};\n\n\t\t\t\t\tfor (; tokensIndex < tokensLength; tokensIndex++) {\n\n\t\t\t\t\t\tvar key = tokens[tokensIndex];\n\n\t\t\t\t\t\tif (key === ']')\n\t\t\t\t\t\t\treturn node;\n\n\t\t\t\t\t\tif (key === TOKEN_EMPTY_STRING)\n\t\t\t\t\t\t\tkey = '';\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tkey = dictionary[key];\n\n\t\t\t\t\t\tvar value = tokens[++tokensIndex];\n\n\t\t\t\t\t\tif (value === '@' || value === '$') {\n\t\t\t\t\t\t\tnode[key] = recursiveUnpackerParser();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch(value) {\n\t\t\t\t\t\t\t\tcase TOKEN_TRUE:\n\t\t\t\t\t\t\t\t\tnode[key] = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_FALSE:\n\t\t\t\t\t\t\t\t\tnode[key] = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_NULL:\n\t\t\t\t\t\t\t\t\tnode[key] = null;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_UNDEFINED:\n\t\t\t\t\t\t\t\t\tnode[key] = undefined;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase TOKEN_EMPTY_STRING:\n\t\t\t\t\t\t\t\t\tnode[key] = '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tnode[key] = dictionary[value];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.verbose && console.log('Parsed ' + this.JSON.stringify(node));\n\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\n\t\t\t\tthrow new TypeError('Bad token ' + type + ' isn\\'t a type');\n\n\t\t\t})();\n\n\t\t}\n\t\t/**\n\t\t * Get the index value of the dictionary\n\t\t * @param {Object} dictionary a object that have two array attributes: 'string' and 'number'\n\t\t * @param {Object} data\n\t\t */\n\t\tvar _indexOfDictionary = function(dictionary, value) {\n\n\t\t\t// The type of the value\n\t\t\tvar type = typeof value;\n\n\t\t\t// If is boolean, return a boolean token\n\t\t\tif (type === 'boolean')\n\t\t\t\treturn value ? TOKEN_TRUE : TOKEN_FALSE;\n\n\t\t\t// If is null, return a... yes! the null token\n\t\t\tif (value === null)\n\t\t\t\treturn TOKEN_NULL;\n\n\t\t\t//add undefined\n\t\t\tif (typeof value === 'undefined')\n\t\t\t\treturn TOKEN_UNDEFINED;\n\n\n\t\t\tif (value === '') {\n\t\t\t\treturn TOKEN_EMPTY_STRING;\n\t\t\t}\n\n\t\t\tif (type === 'string') {\n\t\t\t\tvalue = _encode(value);\n\t\t\t\tvar index = _indexOf.call(dictionary.strings, value);\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tdictionary.strings.push(value);\n\t\t\t\t\tindex = dictionary.strings.length - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If has an invalid JSON type (example a function)\n\t\t\tif (type !== 'string' && type !== 'number') {\n\t\t\t\tthrow new Error('The type is not a JSON type');\n\t\t\t};\n\n\t\t\tif (type === 'string') {// string\n\t\t\t\tvalue = _encode(value);\n\t\t\t} else if (value % 1 === 0) {// integer\n\t\t\t\tvalue = _base10To36(value);\n\t\t\t} else {// float\n\n\t\t\t}\n\n\t\t\t// If is number, \"serialize\" the value\n\t\t\tvalue = type === 'number' ? _base10To36(value) : _encode(value);\n\n\t\t\t// Retrieve the index of that value in the dictionary\n\t\t\tvar index = _indexOf.call(dictionary[type], value);\n\n\t\t\t// If that value is not in the dictionary\n\t\t\tif (index === -1) {\n\t\t\t\t// Push the value\n\t\t\t\tdictionary[type].push(value);\n\t\t\t\t// And return their index\n\t\t\t\tindex = dictionary[type].length - 1;\n\t\t\t}\n\n\t\t\t// If the type is a number, then add the '+'  prefix character\n\t\t\t// to differentiate that they is a number index. If not, then\n\t\t\t// just return a 36-based representation of the index\n\t\t\treturn type === 'number' ? '+' + index : index;\n\n\t\t};\n\n\t\tvar _encode = function(str) {\n\t\t\tif ( typeof str !== 'string')\n\t\t\t\treturn str;\n\n\t\t\treturn str.replace(/[\\+ \\|\\^\\%]/g, function(a) {\n\t\t\t\treturn ({\n\t\t\t\t' ' : '+',\n\t\t\t\t'+' : '%2B',\n\t\t\t\t'|' : '%7C',\n\t\t\t\t'^' : '%5E',\n\t\t\t\t'%' : '%25'\n\t\t\t\t})[a]\n\t\t\t});\n\t\t};\n\n\t\tvar _decode = function(str) {\n\t\t\tif ( typeof str !== 'string')\n\t\t\t\treturn str;\n\n\t\t\treturn str.replace(/\\+|%2B|%7C|%5E|%25/g, function(a) {\n\t\t\t\treturn ({\n\t\t\t\t'+' : ' ',\n\t\t\t\t'%2B' : '+',\n\t\t\t\t'%7C' : '|',\n\t\t\t\t'%5E' : '^',\n\t\t\t\t'%25' : '%'\n\t\t\t\t})[a]\n\t\t\t})\n\t\t};\n\n\t\tvar _base10To36 = function(number) {\n\t\t\treturn Number.prototype.toString.call(number, 36).toUpperCase();\n\t\t};\n\n\t\tvar _base36To10 = function(number) {\n\t\t\treturn parseInt(number, 36);\n\t\t};\n\n\t\tvar _indexOf = Array.prototype.indexOf ||\n\t\tfunction(obj, start) {\n\t\t\tfor (var i = (start || 0), j = this.length; i < j; i++) {\n\t\t\t\tif (this[i] === obj) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\n\t\treturn {\n\t\t\tJSON : JSON,\n\t\t\tpack : pack,\n\t\t\tunpack : unpack\n\t\t};\n\n\t});\n\n})( typeof define == 'undefined' || !define.amd ? function(deps, factory) {\n\tvar jsonpack = factory();\n\tif ( typeof exports != 'undefined')\n\t\tfor (var key in jsonpack)\n\t\texports[key] = jsonpack[key];\n\telse\n\t\twindow.jsonpack = jsonpack;\n} : define);\n","\"use strict\";\n\nvar LZW = function() { };\n\nLZW.prototype.encode = function(s) {\n    var dict = {};\n    var data = (s + \"\").split(\"\");\n    var out = [];\n    var currChar;\n    var phrase = data[0];\n    var code = 256;\n    for (var i = 1; i < data.length; i++) {\n        currChar = data[i];\n        if (dict[phrase + currChar] != null) {\n            phrase += currChar;\n        }\n        else {\n            out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n            dict[phrase + currChar] = code;\n            code++;\n            phrase=currChar;\n        }\n    }\n    out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n    for (var i = 0; i < out.length; i++) {\n        out[i] = String.fromCharCode(out[i]);\n    }\n    return out.join(\"\");\n};\n\nLZW.prototype.decode = function(s) {\n\tvar dict = {};\n\tvar data = (s + \"\").split(\"\");\n\tvar currChar = data[0];\n\tvar oldPhrase = currChar;\n\tvar out = [currChar];\n\tvar code = 256;\n\tvar phrase;\n\tfor (var i = 1; i < data.length; i++) {\n\t\tvar currCode = data[i].charCodeAt(0);\n\t\tif (currCode < 256) {\n\t\t\tphrase = data[i];\n\t\t}\n\t\telse {\n\t\t   phrase = dict[currCode] ? dict[currCode] : (oldPhrase + currChar);\n\t\t}\n\t\tout.push(phrase);\n\t\tcurrChar = phrase.charAt(0);\n\t\tdict[code] = oldPhrase + currChar;\n\t\tcode++;\n\t\toldPhrase = phrase;\n\t}\n\treturn out.join(\"\");\n};\n\nmodule.exports = new LZW();\n","\"use strict\";\n\nvar jpack = require(\"jsonpack/main\");\nvar lzw = require(\"node-lzw\");\n\nvar JSONLZW = function() { };\n\nJSONLZW.prototype.encode = function(t) {\n\tvar s = jpack.pack(t);\n\treturn lzw.encode(s);\n};\n\nJSONLZW.prototype.decode = function(t) {\n\tvar s = jpack.unpack(t);\n\treturn lzw.decode(s);\n};\n\nmodule.exports = new JSONLZW();\n","import { map, shaku } from './global'\nimport { MapData, initMap } from './map'\nimport { InstrumentData, InstrumentType, createInstrument } from './instruments'\nimport { encode, decode } from 'json-lzw'\n\ninterface SaveData {\n    map : MapData,\n    instruments : Array<InstrumentData>\n}\n\nexport function save() {\n    let height = parseInt(map.getAttribute('data-height'));\n    let width = parseInt(map.getAttribute('data-width'));\n    let data : SaveData = {\n        map : {\n            height : height,\n            width : width\n        },\n        instruments : Array<InstrumentData>()\n    };\n    document.querySelectorAll('.taiko').forEach((element : HTMLElement) => {\n        data.instruments.push({\n            type : element.getAttribute('data-type') as InstrumentType,\n            x : element.offsetLeft + element.clientWidth / 2 - map.clientWidth / 2,\n            y : element.offsetTop + element.clientHeight / 2 - map.clientHeight / 2,\n            alpha : 0,\n            diameter : element.clientWidth / shaku\n        })\n    });\n    (document.getElementById('json') as HTMLTextAreaElement).value = JSON.stringify(data);\n    (document.getElementById('min-json') as HTMLTextAreaElement).value = encode(JSON.stringify(data));\n}\n\nexport function load() {\n    let json = (document.getElementById('json') as HTMLTextAreaElement).value\n    let data : SaveData = JSON.parse(json)\n    initMap(data.map.height, data.map.width)\n    data.instruments.forEach((instrument) => {\n        createInstrument(instrument.type, map, instrument.x, instrument.y, instrument.alpha, instrument.diameter)\n    })\n}","import { map } from './global'\nimport { initSelection } from './selection'\nimport { createInstrument, InstrumentType } from './instruments'\nimport { initMap } from './map'\nimport { save, load } from './storage'\n\nwindow.onload = () => {\n    initMap(8, 12)\n    initSelection()\n}\n\ndocument.getElementById('add').onclick = (event) => {\n    createInstrument(InstrumentType.Okedo, map, 0, 0, 0, 1.5)\n}\n\ndocument.getElementById('export').onclick = (event) => {\n    save()\n}\n\ndocument.getElementById('import').onclick = (event) => {\n    load()\n}\n\ndocument.getElementById('new').onclick = (event) => {\n    let height = parseInt((document.getElementById('height') as HTMLInputElement).value)\n    let width = parseInt((document.getElementById('width') as HTMLInputElement).value)\n    initMap(height, width)\n}"]}