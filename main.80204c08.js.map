{"version":3,"sources":["src/global.ts","src/selection.ts","src/draggable.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.80204c08.js","sourceRoot":"..","sourcesContent":["export var mapa : HTMLElement\n\nexport function setMapa(element : HTMLElement) {\n    mapa = element\n}\n","import { mapa } from './global'\n\nfunction interscts(r1: ClientRect, r2: ClientRect): boolean {\n    if (r1.left + r1.width >= r2.left &&\n        r1.left <= r2.left + r2.width &&\n        r1.top + r1.height >= r2.top &&\n        r1.top <= r2.top + r2.height) {\n        return true;\n    }\n    return false;\n}\n\nfunction querySelectorRect(query: string, r: ClientRect): NodeListOf<HTMLElement> {\n    let elements = mapa.querySelectorAll(query)\n\n    let filteredList = []\n    elements.forEach((element) => {\n        if (interscts(element.getBoundingClientRect(), r)) {\n            filteredList.push(element)\n        }\n    })\n\n    return filteredList as unknown as NodeListOf<HTMLElement>\n}\n\n// Select\nlet startingX: number\nlet startingY: number\nlet isSelecting: boolean = false\n\nexport function selectElement(element: HTMLElement) {\n    element.classList.add('selected')\n}\n\nexport function clearSelection() {\n    mapa.querySelectorAll('.draggable').forEach((e) => e.classList.remove('selected'))\n}\n\nexport function initSelection() {\n    let selection = document.getElementById(\"selection\")\n    mapa.onmousedown = (mouseDown) => {\n        if ((mouseDown.target as HTMLElement).id != 'mapa') {\n            return\n        }\n        clearSelection()\n        isSelecting = true\n        startingX = mouseDown.clientX\n        startingY = mouseDown.clientY\n        selection.style.display = 'block'\n        selection.style.left = startingX + 'px'\n        selection.style.top = startingY + 'px'\n        selection.style.height = '0px'\n        selection.style.width = '0px'\n\n        function onMouseMove(mouseMove: MouseEvent) {\n            let width = Math.abs(startingX - mouseMove.clientX)\n            let height = Math.abs(startingY - mouseMove.clientY)\n            selection.style.left = Math.min(startingX, mouseMove.clientX) + 'px'\n            selection.style.top = Math.min(startingY, mouseMove.clientY) + 'px'\n            selection.style.height = height + 'px'\n            selection.style.width = width + 'px'\n            clearSelection()\n            querySelectorRect('.draggable', selection.getBoundingClientRect()).forEach(selectElement)\n        }\n\n        function onMouseUp(mouseUp: MouseEvent) {\n            isSelecting = false\n            selection.style.display = 'none'\n            document.removeEventListener('mouseup', onMouseUp)\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n\n        document.addEventListener('mousemove', onMouseMove)\n        document.addEventListener('mouseup', onMouseUp)\n    }\n}\n","import {clearSelection, selectElement} from './selection'\nimport {mapa} from './global'\n\nexport function makeDraggable(element: HTMLElement) {\n    element.onmousedown = (event) => {\n        event.preventDefault()\n\n        let shiftX = event.clientX - element.getBoundingClientRect().left\n        let shiftY = event.clientY - element.getBoundingClientRect().top\n\n        clearSelection()\n        selectElement(element)\n\n        function onMouseMove(event: MouseEvent) {\n            let newLeft = event.clientX - shiftX\n            let newTop = event.clientY - shiftY\n\n            if (newLeft < mapa.getBoundingClientRect().left) {\n                newLeft = mapa.getBoundingClientRect().left\n            }\n            if (newTop < mapa.getBoundingClientRect().top) {\n                newTop = mapa.getBoundingClientRect().top\n            }\n            let rightEdge = mapa.getBoundingClientRect().left + mapa.offsetWidth - element.offsetWidth\n            if (newLeft > rightEdge) {\n                newLeft = rightEdge\n            }\n            let bottomEdge = mapa.getBoundingClientRect().top + mapa.offsetHeight - element.offsetHeight\n            if (newTop > bottomEdge) {\n                newTop = bottomEdge\n            }\n\n            element.style.left = newLeft + window.pageXOffset + 'px'\n            element.style.top = newTop + window.pageYOffset + 'px'\n        }\n\n        function onMouseUp() {\n            document.removeEventListener('mouseup', onMouseUp)\n            document.removeEventListener('mousemove', onMouseMove)\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n\n    }\n\n    element.ondragstart = () => false\n}","import {mapa, setMapa} from './global'\nimport {selectElement, initSelection, clearSelection} from './selection'\nimport {makeDraggable} from './draggable'\n\nwindow.onload = () => {\n    (document.querySelectorAll(\".draggable\") as NodeListOf<HTMLElement>).forEach (makeDraggable)\n    setMapa(document.getElementById(\"mapa\"))\n    initSelection()\n}\n\n"]}